-- A minimal example composition that publishes a random double to a
-- ROS topic `rand_double`. Moreoever, it subscribes to the topic
-- `listen_int32` and forwards those values to a message queue, from
-- where they can be read using ubx-mq

return bd.system
{
   imports = {
      "stdtypes",
      "ptrig",
      "lfds_cyclic",
      "ubxros",
      "mqueue",
      "rand_double"
   },

   blocks = {
      { name="rosbridge1", type="ubxros" },
      { name="rand_double1", type="ubx/rand_double" },
      { name="ptrig1", type="ubx/ptrig" },
      { name="listen_int32_out", type="ubx/mqueue" },
   },

   configurations = {
      {
	 name="rosbridge1",
	 config = {
	    connections = {
	       { topic = "rand_double", dir='P', ubx_type="double" },
	       { topic = "listen_int32", dir='S', ros_type="std_msgs/Int32" },
	    }
	 }
      },
      {
	 name="ptrig1",
	 config = {
	    period = {sec=0, usec=100000 },
	    tstats_mode=1,
	    tstats_profile_path="/tmp",
	    chain0={
	       { b="#rand_double1" },
	       { b="#rosbridge1" }
	    },
	 },
      },
      {
	 name = "listen_int32_out",
	 config = {
	    mq_id = "listen_int32_out",
	    type_name = "int32_t",
	    data_len = 1,
	    buffer_len = 4,
	 }
      },
   },

   connections = {
      { src="rand_double1.out", tgt="rosbridge1.rand_double" },
      { src="rosbridge1.listen_int32", tgt="listen_int32_out" },
   },
}
